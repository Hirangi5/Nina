{"version":3,"file":"fcl.umd.min.js","sources":["../src/utils/async.ts","../src/discovery/rpc/requests.ts","../src/discovery/rpc/handlers/exec-service.ts","../src/discovery/rpc/handlers/request-wc-qr.ts","../src/discovery/rpc/client.ts","../src/discovery/exec-hook.ts","../src/utils/web/render-frame.js","../src/utils/web/render-pop.js","../src/utils/web/render-tab.js","../src/utils/web/default-config.js","../src/utils/web/strategies/utils/frame.js","../src/VERSION.js","../src/utils/web/strategies/utils/pop.js","../src/utils/web/strategies/utils/tab.js","../src/utils/web/strategies/utils/extension.js","../src/utils/web/exec-local.js","../src/utils/web/coreStrategies.js","../src/utils/web/strategies/iframe-rpc.js","../src/utils/web/strategies/pop-rpc.js","../src/utils/web/strategies/tab-rpc.js","../src/utils/web/strategies/ext-rpc.js","../src/utils/web/storage.ts","../src/utils/walletconnect/loader.ts","../src/fcl.ts","../src/discovery/exec-discovery.ts"],"sourcesContent":["const AbortController =\n  globalThis.AbortController || require(\"abort-controller\")\n\nexport function wrapAbortSignal(signal?: AbortSignal) {\n  const controller = new AbortController()\n  if (signal?.aborted) controller.abort()\n  signal?.addEventListener(\"abort\", () => controller.abort())\n  return controller\n}\n","import {RpcClient, RpcNotification} from \"@onflow/util-rpc\"\n\nexport type DiscoveryRpc = RpcClient<{}, DiscoveryNotifications>\n\nexport enum DiscoveryNotification {\n  NOTIFY_QRCODE_CONNECTING = \"notifyQrCodeConnecting\",\n  NOTIFY_QRCODE_CONNECTED = \"notifyQrCodeConnected\",\n  NOTIFY_QRCODE_ERROR = \"notifyQrCodeError\",\n}\n\nexport enum FclRequest {\n  REQUEST_WALLETCONNECT_QRCODE = \"requestWalletConnectQrCode\",\n  EXEC_SERVICE = \"execService\",\n}\n\nexport type DiscoveryNotifications = {\n  [DiscoveryNotification.NOTIFY_QRCODE_CONNECTING]: RpcNotification<{\n    uri: string\n  }>\n  [DiscoveryNotification.NOTIFY_QRCODE_CONNECTED]: RpcNotification<{\n    uri: string\n  }>\n  [DiscoveryNotification.NOTIFY_QRCODE_ERROR]: RpcNotification<{\n    uri: string\n    error: string\n  }>\n}\n","import {execStrategy, normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {Service} from \"@onflow/typedefs\"\n\nconst APPROVED = \"APPROVED\"\n\n// RPC handler for handling service execution requests (e.g extension service)\nexport const execServiceHandlerFactory =\n  ({\n    onExecResult,\n    execStrategyOpts,\n    execStrategyArgs,\n    abortSignal,\n  }: {\n    onExecResult: (result: any) => void\n    execStrategyOpts: any\n    execStrategyArgs: any\n    abortSignal: AbortSignal\n  }) =>\n  async ({service}: {service: Service}) => {\n    try {\n      const result = await (execStrategy as any)(\n        {\n          ...execStrategyOpts,\n          service,\n          config: execStrategyOpts.config,\n          abortSignal,\n        },\n        // Pass the rest of the arguments (protect against future changes)\n        ...execStrategyArgs.slice(1)\n      )\n\n      const status = normalizePollingResponse(result)?.status || APPROVED\n      if (status === APPROVED) {\n        // Propogrates the result to the execStrategy hook\n        onExecResult(result)\n\n        // Notify Discovery that the service was approved\n        return null\n      } else {\n        // Notify Discovery that the service was rejected\n        throw new Error(result?.reason || \"Service was declined\")\n      }\n    } catch (e: any) {\n      throw new Error(e?.message || \"Service execution failed\")\n    }\n  }\n","import {\n  createSessionProposal,\n  FLOW_METHODS,\n  getSignClient,\n  request as wcRequest,\n} from \"@onflow/fcl-wc\"\nimport {DiscoveryNotification, DiscoveryRpc} from \"../requests\"\n\n// RPC handler for handling WalletConnect QR code requests\nexport const wcRequestHandlerFactory = ({\n  rpc,\n  onExecResult,\n  authnBody,\n  abortSignal,\n}: {\n  rpc: DiscoveryRpc\n  onExecResult: (result: any) => void\n  authnBody: any\n  abortSignal: AbortSignal\n}) => {\n  const watchQr = watchQrFactory({\n    rpc,\n    authnBody,\n  })\n\n  return async ({}) => {\n    if (abortSignal.aborted) {\n      throw new Error(\"Handler has been terminated\")\n    }\n\n    const client = await getSignClient()\n\n    // Execute WC bypass if session is approved\n    const {uri, approval} = await createSessionProposal({\n      client,\n    })\n\n    // Watch for QR code connection asynchronously\n    watchQr({\n      uri,\n      approval,\n      onExecResult,\n    })\n\n    return {uri}\n  }\n}\n\nexport function watchQrFactory({\n  rpc,\n  authnBody,\n}: {\n  rpc: DiscoveryRpc\n  authnBody: any\n}) {\n  return ({\n    uri,\n    approval,\n    onExecResult,\n  }: {\n    uri: string\n    onExecResult: (result: any) => void\n    approval: any\n  }) => {\n    // Watch for QR code connection & resolve callback if connected\n    setTimeout(async () => {\n      try {\n        const client = await getSignClient()\n        const session = await approval()\n        rpc.notify(DiscoveryNotification.NOTIFY_QRCODE_CONNECTING, {\n          uri,\n        })\n\n        const result = await wcRequest({\n          method: FLOW_METHODS.FLOW_AUTHN,\n          body: authnBody,\n          session,\n          client,\n        })\n\n        rpc.notify(DiscoveryNotification.NOTIFY_QRCODE_CONNECTED, {\n          uri,\n        })\n        onExecResult(result)\n      } catch (e: any) {\n        rpc.notify(DiscoveryNotification.NOTIFY_QRCODE_ERROR, {\n          uri,\n          error: e?.message,\n        })\n      }\n    }, 0)\n  }\n}\n","import {RpcClient} from \"@onflow/util-rpc\"\nimport {DiscoveryRpc, FclRequest} from \"./requests\"\nimport {execServiceHandlerFactory} from \"./handlers/exec-service\"\nimport {wcRequestHandlerFactory} from \"./handlers/request-wc-qr\"\n\n// Initialize the discovery RPC client\nexport function createDiscoveryRpcClient({\n  onExecResult,\n  body,\n  opts,\n  args,\n  abortSignal,\n}: {\n  onExecResult: (result: any) => void\n  body: any\n  opts: any\n  args: any\n  abortSignal: AbortSignal\n}) {\n  const rpc: DiscoveryRpc = new RpcClient({\n    notifications: [],\n  })\n\n  rpc.on(\n    FclRequest.REQUEST_WALLETCONNECT_QRCODE,\n    wcRequestHandlerFactory({\n      rpc,\n      onExecResult,\n      authnBody: body,\n      abortSignal,\n    })\n  )\n  rpc.on(\n    FclRequest.EXEC_SERVICE,\n    execServiceHandlerFactory({\n      onExecResult,\n      execStrategyOpts: opts,\n      execStrategyArgs: args,\n      abortSignal,\n    })\n  )\n\n  return {\n    connect: rpc.connect.bind(rpc),\n    receive: rpc.receive.bind(rpc),\n  }\n}\n","import {execStrategy} from \"@onflow/fcl-core\"\nimport {wrapAbortSignal} from \"../utils/async\"\nimport {createDiscoveryRpcClient} from \"./rpc/client\"\nimport {execDiscovery} from \"./exec-discovery\"\n\nconst AUTHN_SERVICE_TYPE = \"authn\"\n\n// Defines the execStrategy hook for Discovery Service\n// Used to define custom service execution rules for the Discovery Service\nexport async function execStrategyHook(...args: any) {\n  const [opts] = args\n  const {body, abortSignal: baseAbortSignal, service} = opts\n\n  // Ensure the service type is \"auth\" for the execStrategyHook\n  if (service?.type !== AUTHN_SERVICE_TYPE) {\n    console.error(\n      `ERROR: Invalid service type for FCL Discovery execStrategyHook, expected \"${AUTHN_SERVICE_TYPE}\" but got \"${service?.type}\"`\n    )\n    return (execStrategy as any)(...args)\n  }\n\n  // Create an abort controller for this context\n  // Either used to terminate WC bypass proposal loop or the base discovery request\n  const abortController = wrapAbortSignal(baseAbortSignal)\n\n  let discoveryPromise: Promise<any> | undefined\n  const resultPromise = new Promise(async (resolve, reject) => {\n    // Initialize the discovery RPC client\n    const rpc = createDiscoveryRpcClient({\n      onExecResult: resolve,\n      body,\n      opts,\n      args,\n      abortSignal: abortController.signal,\n    })\n\n    // Execute the base discovery request\n    discoveryPromise = execDiscovery({\n      customRpc: rpc,\n      opts,\n      args,\n      abortSignal: abortController.signal,\n    }).then(resolve, reject)\n  })\n\n  // Wait for the result promise to resolve or reject\n  await resultPromise.catch(() => {})\n\n  // Give Discovery time to cleanup\n  await Promise.race([\n    new Promise(resolve => setTimeout(resolve, 1000)),\n    discoveryPromise,\n  ]).catch(() => {})\n\n  // Ensure the abort signal is propagated to all candidates on completion\n  abortController.abort()\n\n  // Return the result\n  return resultPromise\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n  color-scheme: light;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *; hid *; clipboard-write\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame.contentWindow, unmount]\n}\n","const POP = \"FCL_POP\"\n\nlet popup = null\nlet previousUrl = null\n\nfunction popupWindow(url, windowName, win, w, h) {\n  const y = win.top.outerHeight / 2 + win.top.screenY - h / 2\n  const x = win.top.outerWidth / 2 + win.top.screenX - w / 2\n  const popup = win.open(\n    url,\n    windowName,\n    `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`\n  )\n  if (!popup)\n    throw new Error(\"Popup failed to open (was it blocked by a popup blocker?)\")\n  return popup\n}\n\nexport function renderPop(src) {\n  if (popup == null || popup?.closed) {\n    popup = popupWindow(src, POP, window, 640, 770)\n  } else if (previousUrl !== src) {\n    popup.location.replace(src)\n    popup.focus()\n  } else {\n    popup.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (popup && !popup.closed) {\n      popup.close()\n    }\n    popup = null\n  }\n\n  return [popup, unmount]\n}\n","const TAB = \"FCL_TAB\"\n\nlet tab = null\nlet previousUrl = null\n\nexport function renderTab(src) {\n  if (tab == null || tab?.closed) {\n    tab = window.open(src, \"_blank\")\n    if (!tab)\n      throw new Error(\"Tab failed to open (was it blocked by the browser?)\")\n  } else if (previousUrl !== src) {\n    tab.location.replace(src)\n    tab.focus()\n  } else {\n    tab.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (tab && !tab.closed) {\n      tab.close()\n    }\n    tab = null\n  }\n\n  return [tab, unmount]\n}\n","export const getDefaultConfig = () => {\n  return {\n    \"discovery.wallet.method.default\": \"IFRAME/RPC\",\n  }\n}\n","import {renderFrame} from \"../../render-frame\"\nimport {buildMessageHandler, serviceEndpoint} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  let $frame, unmount\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n    getSource: () => $frame,\n  })\n  window.addEventListener(\"message\", handler)\n  ;[$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $frame.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","export const VERSION = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","import {renderPop} from \"../../render-pop\"\nimport {buildMessageHandler, serviceEndpoint} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function pop(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  let $pop, unmount\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n    getSource: () => $pop,\n  })\n  window.addEventListener(\"message\", handler)\n  ;[$pop, unmount] = renderPop(serviceEndpoint(service))\n\n  const timer = setInterval(function () {\n    if ($pop && $pop.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Popup Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $pop.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Popup Send Error\", msg, error)\n    }\n  }\n}\n","import {renderTab} from \"../../render-tab\"\nimport {buildMessageHandler, serviceEndpoint} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function tab(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  let $tab, unmount\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n    getSource: () => $tab,\n  })\n  window.addEventListener(\"message\", handler)\n  ;[$tab, unmount] = renderTab(serviceEndpoint(service))\n  const timer = setInterval(function () {\n    if ($tab && $tab.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Tab Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $tab.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Tab Send Error\", msg, error)\n    }\n  }\n}\n","import {buildMessageHandler} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function extension(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n  })\n  window.addEventListener(\"message\", handler)\n\n  send({service})\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      onClose()\n    } catch (error) {\n      console.error(\"Ext Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      window && window.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Ext Send Error\", msg, error)\n    }\n  }\n}\n","import {renderFrame} from \"./render-frame\"\nimport {renderPop} from \"./render-pop\"\nimport {renderTab} from \"./render-tab\"\n\nconst NOT_IMPLEMENTED = () => {\n  throw new Error(\"Strategy util has not been implemented on this platform\")\n}\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": renderFrame,\n  \"VIEW/POP\": renderPop,\n  \"VIEW/TAB\": renderTab,\n  \"VIEW/MOBILE_BROWSER\": NOT_IMPLEMENTED,\n  \"VIEW/DEEPLINK\": NOT_IMPLEMENTED,\n}\n\nexport async function execLocal(service, opts = {serviceEndpoint: () => {}}) {\n  const {serviceEndpoint} = opts\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {CORE_STRATEGIES, getExecHttpPost} from \"@onflow/fcl-core\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\nimport {execPopRPC} from \"./strategies/pop-rpc\"\nimport {execTabRPC} from \"./strategies/tab-rpc\"\nimport {execExtRPC} from \"./strategies/ext-rpc\"\nimport {execLocal} from \"./exec-local\"\n\nexport const coreStrategies = {\n  [CORE_STRATEGIES[\"HTTP/RPC\"]]: getExecHttpPost(execLocal),\n  [CORE_STRATEGIES[\"HTTP/POST\"]]: getExecHttpPost(execLocal),\n  [CORE_STRATEGIES[\"IFRAME/RPC\"]]: execIframeRPC,\n  [CORE_STRATEGIES[\"POP/RPC\"]]: execPopRPC,\n  [CORE_STRATEGIES[\"TAB/RPC\"]]: execTabRPC,\n  [CORE_STRATEGIES[\"EXT/RPC\"]]: execExtRPC,\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execIframeRPC({\n  service,\n  body,\n  config,\n  customRpc,\n  abortSignal,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    const {close} = frame(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            fclVersion: VERSION,\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n              deprecated: {\n                message:\n                  \"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n              },\n            })\n          }\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                payload: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        reject(`Declined: Aborted`)\n        close()\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        reject(`Declined: Aborted`)\n        close()\n      })\n    }\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {pop} from \"./utils/pop\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execPopRPC({\n  service,\n  body,\n  config,\n  abortSignal,\n  customRpc,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    const {close} = pop(service, {\n      customRpc,\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                payload: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        reject(`Declined: Aborted`)\n        close()\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        reject(`Declined: Aborted`)\n        close()\n      })\n    }\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {tab} from \"./utils/tab\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execTabRPC({\n  service,\n  body,\n  config,\n  abortSignal,\n  customRpc,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    const {close} = tab(service, {\n      customRpc,\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                payload: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        close()\n        reject(`Declined: Aborted`)\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        close()\n        reject(`Declined: Aborted`)\n      })\n    }\n  })\n}\n","import {extension} from \"./utils/extension\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execExtRPC({\n  service,\n  body,\n  config,\n  abortSignal,\n  customRpc,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const {close} = extension(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                body: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execExtRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        close()\n        reject(`Declined: Aborted`)\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        close()\n        reject(`Declined: Aborted`)\n      })\n    }\n  })\n}\n","import {StorageProvider} from \"@onflow/fcl-core\"\n\nconst isServerSide = () => typeof window === \"undefined\"\nconst safeParseJSON = (str?: string | null) => {\n  if (str == null) return null\n  try {\n    return JSON.parse(str)\n  } catch (error) {\n    return null\n  }\n}\n\nexport const SESSION_STORAGE = {\n  can: !isServerSide() && !!window.sessionStorage,\n  get: async (key: string) => safeParseJSON(sessionStorage.getItem(key)),\n  put: async (key: string, value: any) =>\n    sessionStorage.setItem(key, JSON.stringify(value)),\n} as StorageProvider\n\nexport const LOCAL_STORAGE = {\n  can: !isServerSide() && !!window.localStorage,\n  get: async (key: string) => safeParseJSON(localStorage.getItem(key)),\n  put: async (key: string, value: any) =>\n    localStorage.setItem(key, JSON.stringify(value)),\n} as StorageProvider\n","import {config} from \"@onflow/config\"\nimport {pluginRegistry} from \"@onflow/fcl-core\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport * as fclWc from \"@onflow/fcl-wc\"\nimport {CoreTypes} from \"@walletconnect/types\"\n\nexport const isServer = typeof window === \"undefined\"\n\nconst getMetadata = (config: {\n  \"app.detail.title\": string | undefined | null\n  \"app.detail.icon\": string | undefined | null\n  \"app.detail.description\": undefined | null\n  \"app.detail.url\": string | undefined | null\n}): CoreTypes.Metadata => {\n  const appTitle = config[\"app.detail.title\"]\n  const appIcon = config[\"app.detail.icon\"]\n  const appDescription = config[\"app.detail.description\"]\n  const appUrl = config[\"app.detail.url\"]\n\n  return {\n    name: appTitle ?? document.title,\n    description: appDescription ?? \"\",\n    url: appUrl ?? window.location.origin,\n    icons: appIcon ? [appIcon] : [],\n  }\n}\n\nexport function initFclWcLoader() {\n  // We cannot load WalletConnect plugin on server side\n  if (isServer) {\n    return\n  }\n\n  // Use previous configuration to check for changes & notify the user that this is not possible\n  let lastConfig: string | null = null\n\n  // Only the first configuration will be used\n  let hasLoaded = false\n\n  config.subscribe(async (fullConfig: any) => {\n    const wcConfig = {\n      \"walletconnect.projectId\": fullConfig[\"walletconnect.projectId\"],\n      \"walletconnect.disableNotifications\":\n        fullConfig[\"walletconnect.disableNotifications\"],\n      \"app.detail.title\": fullConfig[\"app.detail.title\"],\n      \"app.detail.icon\": fullConfig[\"app.detail.icon\"],\n      \"app.detail.description\": fullConfig[\"app.detail.description\"],\n      \"app.detail.url\": fullConfig[\"app.detail.url\"],\n    }\n    const projectId: string | undefined = wcConfig[\"walletconnect.projectId\"]\n    const disableNotifications: boolean | undefined =\n      wcConfig[\"walletconnect.disableNotifications\"]\n\n    // Check if the plugin is already loaded by this loader, but with different configuration\n    // The plugin can only be loaded once\n    const previousConfig = lastConfig\n    lastConfig = JSON.stringify(wcConfig, null, 2)\n    if (hasLoaded) {\n      if (previousConfig !== lastConfig) {\n        console.warn(\n          `FCL WalletConnect Plugin has been already loaded with different configuration. It is not possible to change the configuration after the plugin has been loaded.\n\nPrevious configuration:\n${previousConfig}\n\nCurrent configuration:\n${lastConfig}`\n        )\n      }\n      return\n    }\n\n    // If the configuration is not set, we do not load the plugin\n    const isConfigured = !!projectId\n    if (!isConfigured) {\n      return\n    }\n\n    invariant(\n      !!projectId,\n      \"FCL Configuration value for 'walletconnect.projectId' is required\"\n    )\n\n    // Check if the plugin is already loaded manually\n    // Usually this won't happen as it is more likely that the plugin will be loaded by this loader\n    // before the developer has a chance to load it manually, but it's good to check\n    if (pluginRegistry.getPlugins().has(fclWc.SERVICE_PLUGIN_NAME)) {\n      if (!hasLoaded) {\n        console.warn(\n          \"It seems like the FCL WalletConnect plugins has been already loaded manually. This is no longer necessary, please see the documentation for more information.\"\n        )\n      }\n      hasLoaded = true\n      return\n    }\n    hasLoaded = true\n\n    // Load the plugin if not already loaded\n    // We must lazy load the plugin to avoid race conditions\n    // where the developer attempts to use the plugin before\n    // our loader applies the configuration\n    const {clientPromise: _clientPromise, FclWcServicePlugin} = fclWc.initLazy({\n      projectId,\n      metadata: getMetadata(wcConfig),\n      disableNotifications: disableNotifications,\n    })\n    pluginRegistry.add([FclWcServicePlugin])\n  })\n}\n","export {\n  VERSION,\n  query,\n  verifyUserSignatures,\n  serialize,\n  tx,\n  events,\n  pluginRegistry,\n  discovery,\n  t,\n  WalletUtils,\n  AppUtils,\n  InteractionTemplateUtils,\n  getChainId,\n  TestUtils,\n  config,\n  send,\n  decode,\n  account,\n  block,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  build,\n  withPrefix,\n  sansPrefix,\n  display,\n  cadence,\n  cdc,\n  createSignableVoucher,\n  voucherIntercept,\n  voucherToTxId,\n  transaction,\n  script,\n  ping,\n  atBlockHeight,\n  atBlockId,\n  getAccount,\n  getEvents,\n  getEventsAtBlockHeightRange,\n  getEventsAtBlockIds,\n  getBlock,\n  getBlockHeader,\n  getCollection,\n  getTransactionStatus,\n  getTransaction,\n  getNetworkParameters,\n  getNodeVersionInfo,\n  authorizations,\n  authorization,\n  args,\n  arg,\n  proposer,\n  payer,\n  limit,\n  ref,\n  params,\n  param,\n  validator,\n  invariant,\n  subscribeEvents,\n  nodeVersionInfo,\n} from \"@onflow/fcl-core\"\n\nimport {\n  getMutate,\n  getCurrentUser,\n  initServiceRegistry,\n  StorageProvider,\n} from \"@onflow/fcl-core\"\n\nimport {execStrategyHook} from \"./discovery/exec-hook\"\nconst discoveryOpts = {\n  execStrategy: execStrategyHook,\n}\n\nexport const currentUser = getCurrentUser({\n  platform: \"web\",\n  discovery: discoveryOpts,\n  getStorageProvider: async () => {\n    return (\n      (await config.get<StorageProvider | null>(\"fcl.storage\")) || LOCAL_STORAGE\n    )\n  },\n})\nexport const mutate = getMutate(currentUser)\n\nexport const authenticate = (opts = {}) => currentUser().authenticate(opts)\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = (opts = {}) => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate(opts)\n}\nexport const signUp = (opts = {}) => currentUser().authenticate(opts)\nexport const logIn = (opts = {}) => currentUser().authenticate(opts)\n\nexport const authz = currentUser().authorization\n\nimport {config} from \"@onflow/config\"\nimport {getDefaultConfig, coreStrategies, LOCAL_STORAGE} from \"./utils/web\"\nimport {initFclWcLoader} from \"./utils/walletconnect/loader\"\n\nconfig(getDefaultConfig())\n\ninitServiceRegistry({coreStrategies})\n\n// Automatically load fcl-wc plugin\n// Based on the user's config\ninitFclWcLoader()\n\nexport {LOCAL_STORAGE, SESSION_STORAGE} from \"./utils/web\"\n","import {execStrategy} from \"@onflow/fcl-core\"\n\nexport async function execDiscovery({\n  customRpc,\n  opts,\n  args,\n  abortSignal,\n}: {\n  customRpc: any\n  opts: any\n  args: any\n  abortSignal: any\n}) {\n  // Update the discovery config to enable RPC support\n  const discoveryConfig = {\n    ...opts.config,\n    client: {\n      ...opts.config.client,\n      discoveryRpcEnabled: true,\n    },\n  }\n\n  // Execute base discovery request\n  return execStrategy(\n    {\n      ...opts,\n      config: discoveryConfig,\n      customRpc,\n      abortSignal,\n    },\n    // @ts-ignore - Pass the rest of the arguments (protect against future changes)\n    ...args.slice(1)\n  )\n}\n"],"names":["AbortController","globalThis","require","DiscoveryNotification","FclRequest","APPROVED","wcRequestHandlerFactory","_ref","rpc","onExecResult","authnBody","abortSignal","watchQr","_ref3","_ref4","uri","approval","setTimeout","async","client","getSignClient","session","notify","NOTIFY_QRCODE_CONNECTING","result","wcRequest","method","FLOW_METHODS","FLOW_AUTHN","body","NOTIFY_QRCODE_CONNECTED","e","NOTIFY_QRCODE_ERROR","error","message","watchQrFactory","aborted","Error","createSessionProposal","createDiscoveryRpcClient","opts","args","RpcClient","notifications","on","REQUEST_WALLETCONNECT_QRCODE","EXEC_SERVICE","execStrategyOpts","execStrategyArgs","service","_ref2","execStrategy","config","slice","normalizePollingResponse","status","reason","execServiceHandlerFactory","connect","bind","receive","AUTHN_SERVICE_TYPE","FRAME","renderFrame","src","invariant","document","getElementById","$frame","createElement","id","allow","frameBorder","style","cssText","append","contentWindow","unmount","remove","popup","previousUrl","renderPop","closed","url","windowName","win","w","h","y","top","outerHeight","screenY","x","outerWidth","screenX","open","popupWindow","window","location","replace","focus","close","tab","renderTab","noop","VERSION","NOT_IMPLEMENTED","VIEWS","execLocal","arguments","length","undefined","serviceEndpoint","console","coreStrategies","CORE_STRATEGIES","getExecHttpPost","customRpc","Promise","resolve","reject","uid","includeOlderJsonRpcCall","send","onClose","onMessage","onReady","onResponse","onCustomRpc","handler","buildMessageHandler","getSource","addEventListener","removeEventListener","msg","postMessage","JSON","parse","stringify","frame","_","type","fclVersion","params","data","deprecated","jsonrpc","payload","resp","redir","$pop","timer","setInterval","clearInterval","pop","$tab","extension","isServerSide","safeParseJSON","str","SESSION_STORAGE","can","sessionStorage","get","getItem","key","put","value","setItem","LOCAL_STORAGE","localStorage","isServer","getMetadata","appTitle","appIcon","appDescription","appUrl","name","title","description","origin","icons","discoveryOpts","_len","Array","_key","baseAbortSignal","abortController","signal","controller","abort","wrapAbortSignal","discoveryPromise","resultPromise","discoveryConfig","discoveryRpcEnabled","execDiscovery","then","catch","race","currentUser","getCurrentUser","platform","discovery","getStorageProvider","mutate","getMutate","authz","authorization","initServiceRegistry","lastConfig","hasLoaded","subscribe","wcConfig","fullConfig","projectId","disableNotifications","previousConfig","warn","pluginRegistry","getPlugins","has","fclWc","SERVICE_PLUGIN_NAME","clientPromise","_clientPromise","FclWcServicePlugin","initLazy","metadata","add","initFclWcLoader","authenticate","unauthenticate"],"mappings":"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"}